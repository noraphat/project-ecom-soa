name: E-commerce API CI

# Trigger the workflow on push to any branch or pull requests
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# Jobs to run
jobs:
  test:
    name: Test FastAPI Application
    runs-on: ubuntu-latest
    
    # MySQL service container for testing
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: 1111
          MYSQL_DATABASE: nor_db
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h localhost -u root -p1111"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      # Checkout repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Setup Python environment
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      # Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
      # Initialize the database with schema
      - name: Initialize Database
        run: |
          mysql -h127.0.0.1 -uroot -p1111 nor_db < schema.sql
          
      # Run tests
      - name: Run tests
        env:
          DB_HOST: 127.0.0.1
          DB_USER: root
          DB_PASSWORD: 1111
          DB_NAME: nor_db
        run: |
          pytest -v --cov=./ tests/
          
  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
      # Checkout repository
      - name: Checkout code
        uses: actions/checkout@v3
        
      # Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        
      # Build the Docker image
      - name: Build Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: false
          tags: project-ecommerce-soa:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max